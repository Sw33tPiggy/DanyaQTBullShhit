//#include "vector.h"


//template <class T>
//vector<T>::vector(size_t n)
//{
//    array = new T[n];
//    capasity = n;
//    _size = 0;
//}

//template <class T>
//void vector<T>::push_back(const T& value){
//    if(_size == capasity){

//        capasity = capasity * 2;
//        if(capasity == 0){
//            capasity = 1;
//        }
//        auto oldArr = array;
//        array = new T[capasity];
//        std::copy(oldArr, oldArr+_size, array);
//    }
//    array[_size] = value;
//    _size++;
//}

//template <class T>
//size_t vector<T>::size(){
//    return _size;
//}

//template <class T>
//T& vector<T>::operator[](size_t index){
//    return array[index];
//}
